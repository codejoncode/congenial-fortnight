# Generated by Django 5.2.6 on 2025-10-09 17:09

import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="APIUsageTracker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("api_name", models.CharField(db_index=True, max_length=50)),
                (
                    "date",
                    models.DateField(db_index=True, default=django.utils.timezone.now),
                ),
                ("requests_made", models.IntegerField(default=0)),
                ("requests_limit", models.IntegerField()),
                ("last_request_time", models.DateTimeField(blank=True, null=True)),
                ("rate_limit_per_minute", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "api_usage_tracker",
                "indexes": [
                    models.Index(
                        fields=["api_name", "-date"],
                        name="api_usage_t_api_nam_cf930f_idx",
                    )
                ],
                "unique_together": {("api_name", "date")},
            },
        ),
        migrations.CreateModel(
            name="PaperTrade",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "signal_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                ("pair", models.CharField(db_index=True, max_length=20)),
                (
                    "order_type",
                    models.CharField(
                        choices=[("buy", "Buy"), ("sell", "Sell")], max_length=10
                    ),
                ),
                ("entry_price", models.DecimalField(decimal_places=5, max_digits=10)),
                (
                    "lot_size",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.01"), max_digits=10
                    ),
                ),
                ("stop_loss", models.DecimalField(decimal_places=5, max_digits=10)),
                (
                    "take_profit_1",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "take_profit_2",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "take_profit_3",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "entry_time",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("exit_time", models.DateTimeField(blank=True, null=True)),
                (
                    "exit_price",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "pips_gained",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "profit_loss",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "risk_reward_ratio",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("open", "Open"),
                            ("closed", "Closed"),
                            ("cancelled", "Cancelled"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "signal_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("high_conviction", "High Conviction ML"),
                            ("harmonic", "Harmonic Pattern"),
                            ("quantum_mtf", "Quantum Multi-Timeframe"),
                            ("confluence", "Confluence (2-Model)"),
                            ("ultra", "Ultra (3-Model Confluence)"),
                            ("manual", "Manual"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "signal_source",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "paper_trades",
                "ordering": ["-entry_time"],
                "indexes": [
                    models.Index(
                        fields=["pair", "status"], name="paper_trade_pair_7d3e6b_idx"
                    ),
                    models.Index(
                        fields=["entry_time", "status"],
                        name="paper_trade_entry_t_2d6675_idx",
                    ),
                    models.Index(
                        fields=["signal_type"], name="paper_trade_signal__d951eb_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PerformanceMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(db_index=True)),
                ("pair", models.CharField(db_index=True, max_length=20)),
                ("total_trades", models.IntegerField(default=0)),
                ("winning_trades", models.IntegerField(default=0)),
                ("losing_trades", models.IntegerField(default=0)),
                (
                    "win_rate",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "total_pips",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "total_pnl",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "avg_risk_reward",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "max_drawdown",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "starting_equity",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("10000.00"), max_digits=15
                    ),
                ),
                (
                    "ending_equity",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("10000.00"), max_digits=15
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "performance_metrics",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["date", "pair"], name="performance_date_faaf5a_idx"
                    ),
                    models.Index(fields=["-date"], name="performance_date_8614f3_idx"),
                ],
                "unique_together": {("date", "pair")},
            },
        ),
        migrations.CreateModel(
            name="PriceCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(db_index=True, max_length=20)),
                ("timestamp", models.DateTimeField(db_index=True)),
                ("open", models.DecimalField(decimal_places=5, max_digits=10)),
                ("high", models.DecimalField(decimal_places=5, max_digits=10)),
                ("low", models.DecimalField(decimal_places=5, max_digits=10)),
                ("close", models.DecimalField(decimal_places=5, max_digits=10)),
                ("volume", models.BigIntegerField(default=0)),
                ("source", models.CharField(max_length=50)),
                (
                    "timeframe",
                    models.CharField(
                        choices=[
                            ("1m", "1 Minute"),
                            ("5m", "5 Minutes"),
                            ("15m", "15 Minutes"),
                            ("30m", "30 Minutes"),
                            ("1h", "1 Hour"),
                            ("4h", "4 Hours"),
                            ("1d", "1 Day"),
                            ("1w", "1 Week"),
                        ],
                        db_index=True,
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "price_cache",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["symbol", "-timestamp"],
                        name="price_cache_symbol_d7751b_idx",
                    ),
                    models.Index(
                        fields=["symbol", "timeframe", "-timestamp"],
                        name="price_cache_symbol_1cd7d0_idx",
                    ),
                ],
                "unique_together": {("symbol", "timestamp", "timeframe", "source")},
            },
        ),
    ]
