name: Daily Model Training & Backtesting

on:
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2 AM UTC
  workflow_dispatch:     # Manual trigger
  push:
    branches: [ main, enhancements_backend ]
    paths:
      - 'candle_prediction_system.py'
      - 'daily_forex_signal_system.py'

jobs:
  train-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create necessary directories
      run: |
        mkdir -p models
        mkdir -p data/raw
        mkdir -p output

    - name: Train EURUSD models
      run: |
        python -c "
        from candle_prediction_system import CandlePredictionSystem
        system = CandlePredictionSystem(['EURUSD'])
        results = system.run_full_pipeline()
        print('Training completed successfully')
        "

    - name: Run EURUSD backtest
      run: |
        python -c "
        import os
        import sys
        sys.path.append('.')
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'signals.settings')

        import django
        django.setup()

        from django.core.management import execute_from_command_line
        execute_from_command_line(['manage.py', 'backtest_signals', 'EURUSD', '--days', '30', '--export-csv'])
        "

    - name: Generate performance report
      run: |
        echo '# Daily Training Report - $(date)' > training_report.md
        echo '' >> training_report.md
        echo '## Training Results' >> training_report.md
        echo '- Models trained successfully' >> training_report.md
        echo '- Backtest completed' >> training_report.md
        echo '' >> training_report.md
        echo '## Files Generated' >> training_report.md
        ls -la models/ | head -10 >> training_report.md
        echo '' >> training_report.md
        ls -la output/ | head -10 >> training_report.md

    - name: Upload trained models
      uses: actions/upload-artifact@v3
      with:
        name: eurusd-models-${{ github.run_number }}
        path: models/
        retention-days: 30

    - name: Upload backtest results
      uses: actions/upload-artifact@v3
      with:
        name: backtest-results-${{ github.run_number }}
        path: output/
        retention-days: 30

    - name: Upload training report
      uses: actions/upload-artifact@v3
      with:
        name: training-report-${{ github.run_number }}
        path: training_report.md
        retention-days: 7

    - name: Commit model updates (optional)
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add models/ output/
        git commit -m "Update models and backtest results [automated]" || echo "No changes to commit"
        git push || echo "Push failed - likely due to branch protection"

    - name: Notify on failure
      if: failure()
      run: |
        echo "Training failed - check logs for details"